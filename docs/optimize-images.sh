#!/bin/bash

# Script d'optimisation des images pour am√©liorer PageSpeed Insights
# Convertit les images en WebP et optimise les JPG/PNG

echo "üöÄ Optimisation des images en cours..."

# V√©rifier si cwebp est install√©
if ! command -v cwebp &> /dev/null; then
    echo "‚ö†Ô∏è  cwebp n'est pas install√©. Installation via Homebrew..."
    brew install webp
fi

# V√©rifier si jpegoptim est install√©
if ! command -v jpegoptim &> /dev/null; then
    echo "‚ö†Ô∏è  jpegoptim n'est pas install√©. Installation via Homebrew..."
    brew install jpegoptim
fi

# V√©rifier si optipng est install√©
if ! command -v optipng &> /dev/null; then
    echo "‚ö†Ô∏è  optipng n'est pas install√©. Installation via Homebrew..."
    brew install optipng
fi

cd "$(dirname "$0")"

# Optimiser et convertir grass.jpg
echo "üì∏ Optimisation de grass.jpg..."
if [ -f "assets/grass.jpg" ]; then
    cp assets/grass.jpg assets/grass.jpg.backup
    jpegoptim --max=85 --strip-all assets/grass.jpg
    cwebp -q 85 assets/grass.jpg -o assets/grass.webp
    echo "‚úÖ grass.jpg optimis√© et converti en WebP"
fi

# Optimiser et convertir cloud.jpg
echo "üì∏ Optimisation de cloud.jpg..."
if [ -f "assets/cloud.jpg" ]; then
    cp assets/cloud.jpg assets/cloud.jpg.backup
    jpegoptim --max=85 --strip-all assets/cloud.jpg
    cwebp -q 85 assets/cloud.jpg -o assets/cloud.webp
    echo "‚úÖ cloud.jpg optimis√© et converti en WebP"
fi

# Optimiser et convertir le PNG de texture
echo "üì∏ Optimisation de UV_Polaroid_frame_Template_TEST_NORMAL_V2.png..."
if [ -f "Windsurf carrousel/Textures/UV_Polaroid_frame_Template_TEST_NORMAL_V2.png" ]; then
    cp "Windsurf carrousel/Textures/UV_Polaroid_frame_Template_TEST_NORMAL_V2.png" "Windsurf carrousel/Textures/UV_Polaroid_frame_Template_TEST_NORMAL_V2.png.backup"
    optipng -o7 "Windsurf carrousel/Textures/UV_Polaroid_frame_Template_TEST_NORMAL_V2.png"
    cwebp -q 90 "Windsurf carrousel/Textures/UV_Polaroid_frame_Template_TEST_NORMAL_V2.png" -o "Windsurf carrousel/Textures/UV_Polaroid_frame_Template_TEST_NORMAL_V2.webp"
    echo "‚úÖ PNG optimis√© et converti en WebP"
fi

# Optimiser les images Polaroid
echo "üì∏ Optimisation des images Polaroid..."
for file in "Windsurf carrousel/Textures"/Polaroid_*.jpg; do
    if [ -f "$file" ]; then
        cp "$file" "$file.backup"
        jpegoptim --max=85 --strip-all "$file"
        cwebp -q 85 "$file" -o "${file%.jpg}.webp"
        echo "‚úÖ $(basename "$file") optimis√©"
    fi
done

echo "‚ú® Optimisation termin√©e!"
echo ""
echo "üìä R√©sum√©:"
echo "- Images JPG optimis√©es avec jpegoptim (qualit√© 85%)"
echo "- Images PNG optimis√©es avec optipng"
echo "- Versions WebP cr√©√©es pour tous les formats"
echo "- Backups cr√©√©s avec extension .backup"
echo ""
echo "üí° Prochaine √©tape: Mettre √† jour le code pour utiliser les images WebP"
